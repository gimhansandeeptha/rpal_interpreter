let rec length I = I eq 0 -> 0 | 1 + length(I/10)
in
let rec length I = I eq 0 -> 0 | 1 + length(I/10)
in
let Equl(n,len) = n/(10**(len-1)) eq n-(n/10)*10 -> true | false
in
let rec Pal(n,len) = len le 1 -> true
                    | Equl(n,len) -> Pal((n/10)-((n/10)/10**(len-2))*10**(len-2),len-2) 
                    | false
in
let rec F(stt,end,T) = end ls stt -> T | ( Pal(stt,length(stt)) -> F(stt+1,end,T aug stt)| F(stt+1,end,T))
in
Print(F (100, 200, nil))
