let rec Fib m n T x y = (x+y) gr n -> T |((x+y) ls m -> Fib m n T y (x+y) | Fib m n (T aug (x+y)) y (x+y)) 
in 
let func m n = m eq 0 -> (n eq 0 -> (nil aug 0) | (Fib m n (0,1) 0 1)) | m eq 1 -> (Fib m n (nil aug 1) 0 1) | (Fib m n nil 0 1)
in
Print(func 0 100)
